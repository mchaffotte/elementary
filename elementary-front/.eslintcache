[{"/home/matthieu/projects/misc/elementary/elementary-front/src/App.tsx":"1","/home/matthieu/projects/misc/elementary/elementary-front/src/index.tsx":"2","/home/matthieu/projects/misc/elementary/elementary-front/src/reportWebVitals.ts":"3","/home/matthieu/projects/misc/elementary/elementary-front/src/components/Stories.tsx":"4","/home/matthieu/projects/misc/elementary/elementary-front/src/components/Game.tsx":"5"},{"size":632,"mtime":1607705326103,"results":"6","hashOfConfig":"7"},{"size":500,"mtime":1607464775328,"results":"8","hashOfConfig":"7"},{"size":425,"mtime":1607461031667,"results":"9","hashOfConfig":"7"},{"size":918,"mtime":1608033580399,"results":"10","hashOfConfig":"7"},{"size":2353,"mtime":1608033160452,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"187srfv",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/home/matthieu/projects/misc/elementary/elementary-front/src/App.tsx",[],"/home/matthieu/projects/misc/elementary/elementary-front/src/index.tsx",[],"/home/matthieu/projects/misc/elementary/elementary-front/src/reportWebVitals.ts",[],"/home/matthieu/projects/misc/elementary/elementary-front/src/components/Stories.tsx",[],"/home/matthieu/projects/misc/elementary/elementary-front/src/components/Game.tsx",["23"],"import { FunctionComponent, useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useMutation, gql } from \"@apollo/client\";\n\nimport { Game } from \"../api\";\n\ninterface LocationState {\n  storyId: number;\n}\n\nconst START_GAME = gql`\n  mutation startGame($id: BigInteger!) {\n    startGame(storyId: $id) {\n      section {\n        reference\n        paragraphs\n        actions {\n          description\n          id\n        }\n      }\n    }\n  }\n`;\n\nconst TURN_TO = gql`\n  mutation turnTo($id: Int!) {\n    turnTo(nextReference: $id) {\n      section {\n        reference\n        paragraphs\n        actions {\n          id\n          description\n        }\n      }\n    }\n  }\n`;\n\nconst STOP_GAME = gql`\n  mutation stopGame {\n    stopGame\n  }\n`;\n\nconst GamePage: FunctionComponent<{}> = () => {\n  const [sectionId, setSectionId] = useState(-1);\n  const location = useLocation<LocationState>();\n\n  const [start, response] = useMutation<{ startGame: Game }, { id: number }>(\n    START_GAME\n  );\n\n  const [turnTo, toResponse] = useMutation<{ turnTo: Game }, { id: number }>(\n    TURN_TO\n  );\n\n  const [stop] = useMutation<{ stopGame: boolean }>(STOP_GAME);\n\n  useEffect(() => {\n    if (location.state) {\n      start({ variables: { id: location.state.storyId } });\n    }\n  }, [location.state, start]);\n\n  useEffect(() => {\n    if (sectionId !== -1) {\n      turnTo({ variables: { id: sectionId } });\n    }\n  }, [sectionId, turnTo]);\n\n  const handleTurnTo = (nextReference: number) => {\n    setSectionId(nextReference);\n  };\n\n  let section;\n  if (sectionId === -1) {\n    if (!location) {\n      return null;\n    }\n    if (response.loading || !response.data) {\n      return <span>LOADING</span>;\n    }\n    section = response.data.startGame.section;\n  } else {\n    if (toResponse.loading || !toResponse.data) {\n      return <span>LOADING</span>;\n    }\n    section = toResponse.data.turnTo.section;\n  }\n\n  return (\n    <div>\n      <span>{section.reference}</span>\n      <div>\n        {section.paragraphs.map((paragraph) => (\n          <p>{paragraph}</p>\n        ))}\n      </div>\n      <div>\n        {section.actions.map((action) => (\n          <div>\n            {action.description}\n            <button onClick={() => handleTurnTo(action.id)}>Next</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default GamePage;\n",{"ruleId":"24","severity":1,"message":"25","line":59,"column":10,"nodeType":"26","messageId":"27","endLine":59,"endColumn":14},"@typescript-eslint/no-unused-vars","'stop' is assigned a value but never used.","Identifier","unusedVar"]